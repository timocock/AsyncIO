* "asyncio.library"
==license Original asyncio.library by Martin Taillefer
==license Updates by Magnus Holmgren 1997
==license Refactoring for Amiga NDK3.2 by amigazen project 2025
==base _AsyncIOBase
==basetype struct Library *
==libname asyncio.library
==include <libraries/asyncio.h>
==include <dos/dos.h>
==typedef AsyncFile
==bias 30
==public
==version 39.2
AsyncFile * OpenAsync(STRPTR fileName, ULONG mode, LONG bufferSize) (A0,D0,D1)
AsyncFile * OpenAsyncFromFH(BPTR handle, ULONG mode, LONG bufferSize) (A0,D0,D1)
LONG CloseAsync(AsyncFile * file) (A0)
LONG SeekAsync(AsyncFile * file, LONG position, LONG mode) (A0,D0,D1)
LONG ReadAsync(AsyncFile * file, APTR buffer, LONG bytes) (A0,A1,D0)
LONG WriteAsync(AsyncFile * file, APTR buffer, LONG bytes) (A0,A1,D0)
LONG ReadCharAsync(AsyncFile * file) (A0)
LONG WriteCharAsync(AsyncFile * file, ULONG ch) (A0,D0)
LONG ReadLineAsync(AsyncFile * file, STRPTR buf, LONG bytes) (A0,A1,D0)
LONG WriteLineAsync(AsyncFile * file, STRPTR buf) (A0,A1)
STRPTR FGetsAsync(AsyncFile * file, STRPTR buf, LONG bytes) (A0,A1,D0)
STRPTR FGetsLenAsync(AsyncFile * file, STRPTR buf, LONG bytes, LONG * length) (A0,A1,D0,A2)
LONG PeekAsync(AsyncFile * file, APTR buffer, LONG bytes) (A0,A1,D0)
==private
==end 